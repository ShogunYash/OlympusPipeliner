# RISC-V Pipeline Simulator Source Overview

src/
├── main.cpp               # Main program entry point for no-forwarding simulator
├── main_forward.cpp       # Main program entry point for forwarding simulator
├── processor.hpp          # Base processor class (abstract pipeline implementation)
├── processor.cpp          # Base processor implementation (common operations)
├── no_forwarding.hpp      # Non-forwarding processor variant (stalls on hazards)
├── no_forwarding.cpp      # Non-forwarding implementation of pipeline stages
├── forwarding.hpp         # Forwarding processor variant (uses data forwarding)
├── forwarding.cpp         # Forwarding implementation of pipeline stages
├── instruction.hpp        # RISC-V instruction representation and decoding
├── instruction.cpp        # Instruction implementation with assembly conversion
├── register_file.hpp      # Register file (32 registers) interface
├── register_file.cpp      # Register file implementation 
├── memory.hpp             # Data memory system interface
├── memory.cpp             # Data memory implementation (byte addressable)
├── instruction_memory.hpp # Separate instruction memory interface
├── instruction_memory.cpp # Instruction memory implementation
├── pipeline.hpp           # Pipeline register definitions for all stages
├── alu.hpp                # ALU operations interface
├── alu.cpp                # ALU implementation with all RISC-V operations
├── makefile               # Build system for compiling both variants
└── assemble.sh            # Script to convert RISC-V assembly to machine code

Test Programs:
├── test_simple.txt             # Basic arithmetic operations test
├── test_print.txt              # System call testing (print value 10)
└── test_strlen_with_string.txt # String length calculation with embedded data
